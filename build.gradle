buildscript {
   ext {
      springBootVersion = '2.3.3.RELEASE'
      querydslPluginVersion = '1.0.10'
   }
   repositories {
      mavenCentral()
      maven { url "https://plugins.gradle.org/m2/" }
   }
   dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:${'2.3.3.RELEASE'}")
      classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
      classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${'1.0.10'}")
   }
}
plugins {
   id 'java'
   id 'org.springframework.boot' version '2.3.3.RELEASE'
   id 'io.spring.dependency-management' version '1.0.9.RELEASE' //gradle 6.6
   id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.bluecore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
   querydsl.extendsFrom compileClasspath
   compileOnly {
      extendsFrom annotationProcessor
   }
}

repositories {
	mavenCentral()
}
apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
   implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.google.code.gson:gson'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	annotationProcessor 'org.projectlombok:lombok'
	compile('org.projectlombok:lombok') //lombok
   compile("com.querydsl:querydsl-jpa") // querydsl
   compile("com.querydsl:querydsl-apt") // querydsl
}

def querydslSrcDir = 'src/main/generated' // QClass 생성 위치
querydsl {
   library = "com.querydsl:querydsl-apt"
   jpa = true
   querydslSourcesDir = querydslSrcDir
}

sourceSets {
   main {
      java {
         srcDirs = ['src/main/java/', querydslSrcDir]
      }
   }
}

compileQuerydsl{
   options.annotationProcessorPath = configurations.querydsl
}

test {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
